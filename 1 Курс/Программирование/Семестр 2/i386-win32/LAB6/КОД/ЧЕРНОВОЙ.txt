program STACK;
{ðàçäåë ïîäêëþ÷åíèÿ ñòîðîííèõ ìîäóëåé}
uses
{ïîäêëþ÷àåì ìîäóëü crt - console run time, ÷òîáû ìîæíî áûëî
 èñïîëüçîâàòü ïîäïðîãðàììû äëÿ ðàáîòû ñ êîíñîëüþ}
    crt;
{ðàçäåë äåêëàðàöèè ñîáñòâåííûõ òèïîâ äàííûõ}
type
{óêàçàòåëüíûé òèï äàííûõ íà ýëåìåíò Ñòåêà}
    Tptr = ^Telem;
{çàïèñü, ñîñòîÿùàÿ èç äâóõ ïîëåé, îïèñûâàþùàÿ ýëåìåíò Ñòåêà}
    Telem = record
        inf : integer;  {èíôîðìàöèîííîå ïîëå - õðàíèò öåëûå ÷èñëà}
        link : Tptr;    {óêàçàòåëüíîå ïîëå - ññûëêà íà ñëåäóþùèé ýëåìåíò Ñòåêà}
    end;
{ðàçäåë îïèñàíèÿ ïåðåìåííûõ}
var
{ãëîáàëüíàÿ ïåðåìåííàÿ - óêàçàòåëü íà âåðøèíó Ñòåêà}
    top : Tptr;
{---------------------------------------------------------------------------}
{Ïðîöåäóðà: äîáàâëåíèå ýëåìåíòà â âåðøèíó Ñòåêà}
{---------------------------------------------------------------------------}
procedure push;
var
{âñïîìîãàòåëüíûé óêàçàòåëü, ññûëàþùèéñÿ íà äîáàâëÿåìûé ýëåìåíò}
    p : Tptr;
{íà÷àëî òåëà ïðîöåäóðû}
begin
{âûäåëåíèå ïàìÿòè ïîä äîáàâëÿåìûé ýëåìåíò}
    new(p);
{"ïðèâÿçàëè" ëèíêîâî÷íîå ïîëå ê NIL, ÷òîáû íå áûëî âèñÿ÷åé ññûëêè}
    p^.link := NIL;
{ââîä çíà÷åíèÿ èíôîðìàöèîííîãî ïîëÿ ýëåìåíòà ñ êëàâèàòóðû}
    write('Enter the value of the added element: ');
    readln(p^.inf);
{óêàçàòåëü äîáàâëÿåìîãî ýëåìåíòà ïîñòàâèëè íà ïåðâûé ýëåìåíò Ñòåêà}
    p^.link := top;
{óêàçàòåëü íà âåðøèíó Ñòåêà top ïîñòàâèëè íà òîëüêî ÷òî äîáàâëåííûé ýëåìåíò.
 Â èòîãå, Ñòåê íàõîäèòñÿ â ñîãëàñîâàííîì ñîñòîÿíèè ïîñëå äîáàâëåíèÿ ýëåìåíòà}
    top := p;
{êîíåö òåëà ïðîöåäóðû}
end;
{---------------------------------------------------------------------------}
{Ïðîöåäóðà: óäàëåíèå ýëåìåíòà èç âåðøèíû Ñòåêà}
{---------------------------------------------------------------------------}
procedure pop;
var
{âñïîìîãàòåëüíûé óêàçàòåëü, ññûëàþùèéñÿ íà óäàëÿåìûé ýëåìåíò}
    p : Tptr;
{íà÷àëî òåëà ïðîöåäóðû}
begin
{ïîçèöèîíèðóåì óêàçàòåëü p íà âåðøèíó Ñòåêà}
    p := top;
{ïîñêîëüêó íà ïåðâûé ýëåìåíò ññûëàåòñÿ óæå äâà óêàçàòåëÿ p è top,
 ñëåäîâàòåëüíî, îäèí èç óêàçàòåëåé ìîæíî "îòâÿçàòü" îò ïåðâîãî ýëåìåíòà.
 Ïîýòîìó ïåðåìåùàåì top ñ âåðõíåãî ýëåìåíòà íà âòîðîé ýëåìåíò Ñòåêà}
    top := p^.link;
{îêîí÷àòåëüíî ðàçðóøàåì ñâÿçü ìåæäó ïåðâûì è âòîðûì ýëåìåíòîì, òàê êàê
 ïåðâûé ýëåìåíò ñåé÷àñ áóäåò óäàëÿòüñÿ}
    p^.link := NIL;
{óäàëÿåì ïåðâûé ýëåìåíò Ñòåêà}
    dispose(p);
{êîíåö òåëà ïðîöåäóðû}
end;
{---------------------------------------------------------------------------}
{Ïðîöåäóðà: ïå÷àòü ýëåìåíòîâ Ñòåêà îò âåðøèíû â êîíåö}
{---------------------------------------------------------------------------}
procedure printFromTop;
var
{âñïîìîãàòåëüíûé óêàçàòåëü, ññûëàþùèéñÿ íà òåêóùèé ýëåìåíò Ñòåêà}
    p : Tptr;
{íà÷àëî òåëà ïðîöåäóðû}
begin
{óñòàíàâëèâàåì óêàçàòåëü ð íà ïåðâûé ýëåìåíò Ñòåêà}
    p := top;
{âûïå÷àòûâàåì íà ýêðàí äèàëîã}
    write('Stack elements look like: ');
{äî òåõ ïîð, ïîêà óêàçàòåëü ð íå âûéäåò çà ïîñëåäíèé ýëåìåíò Ñòåêà}
    while(p <> NIL) do
    begin
{ïå÷àòàåì íà ýêðàí ïîëüçîâàòåëÿ èíôîðìàöèîííîå ïîëå òåêóùåãî ýëåìåíòà Ñòåêà,
 ïðè÷åì öåëûå ÷èñëà ïå÷àòàþòñÿ ÷åðåç ïðîáåë, ÷òîáû âûâîä áûë ïîíÿòíûì}
        write(p^.inf, ' ');
{ïåðåõîä íà ñëåäóþùèé ýëåìåíò Ñòåêà}
        p := p^.link;
    end;
{êîíåö òåëà ïðîöåäóðû}
end;
{---------------------------------------------------------------------------}
{Ðåêóðñèâíàÿ (âîçâðàò) ïðîöåäóðà: ïå÷àòü ýëåìåíòîâ Ñòåêà îò êîíöà ê âåðøèíå}
{---------------------------------------------------------------------------}
{ïðîöåäóðà ïðèíèìàåò ïàðàìåòð - óêàçàòåëü íà âåðøèíó Ñòåêà}
procedure printRecFromEnd(pp : Tptr);
begin
{ëþáàÿ ðåêóðñèÿ îáÿçàíà èìåòü ýëåìåíòàðíûé ñëó÷àé, ÷òîáû çàâåðøèòñÿ. Â
 äàííîé ïðîöåäóðå, ýëåìåíòàðíûì ñëó÷àåì ÿâëÿåòñÿ ñèòóàöèÿ, êîãäà
 óêàçàòåëü âûøåë çà ïîñëåäíèé ýëåìåíò ñòåêà, òî åñòü ññûëàåòñÿ íà NIL}
    if(pp <> NIL) then
    begin
{ðåêóðñèâíûé âûçîâ, â êà÷åñòâå ïàðàìåòðà ïåðåäàåòñÿ óêàçàòåëü íà
 ñëåäóþùèé ýëåìåíò Ñòåêà}
        printRecFromEnd(pp^.link);
{ïå÷àòü çíà÷åíèÿ èíôîðìàöèîííîãî ïîëÿ òåêóùåãî ýëåìåíòà
 ïðè÷åì öåëûå ÷èñëà ïå÷àòàþòñÿ ÷åðåç ïðîáåë, ÷òîáû âûâîä áûë ïîíÿòíûì}
        write(pp^.inf, ' ');
    end;
{êîíåö òåëà ïðîöåäóðû}
end;
{---------------------------------------------------------------------------}
{Ïðîöåäóðà: óäàëåíèå âñåõ ýëåìåíòîâ èç Ñòåêà}
{---------------------------------------------------------------------------}
procedure delAllStack;
var
{âñïîìîãàòåëüíûé óêàçàòåëü}
    p : Tptr;
begin
{óäàëåíèå ýëåìåíòîâ íà÷èíàåòñÿ ñ ïåðâîãî ýëåìåíòà Ñòåêà}
    p := top;
{ïîêà íå áóäóò óäàëåíû âñå ýëåìåíòû èç Ñòåêà, òî åñòü ïîêà óêàçàòåëü ð
 íå ñòàíåò ðàâíûì NIL íà÷èíàåì öèêë}
    while(p <> NIL) do
    begin
{÷òîáû óäàëèòü òåêóùèé ýëåìåíò è íå ïîòåðÿòü ñâÿçü ñî ñëåäóþùèì, ïåðåñòàâëÿåì
 óêàçàòåëü top íà ñëåäóþùèé ýëåìåíò Ñòåêà}
        top := p^.link;
{îêîí÷àòåëüíî ðàçðóøàåì ñâÿçü ìåæäó óäàëÿåìûì è ñëåäóþùèì ýëåìåíòîì, òàê êàê
 òåêóùèé ýëåìåíò ñåé÷àñ áóäåò óäàëÿòüñÿ}
        p^.link := NIL;
{óäàëÿåì âåðõíèé ýëåìåíò èç Ñòåêà}
        dispose(p);
{óñòàíîâêà óêàçàòåëÿ ð ñíîâà íà âåðøèíó Ñòåêà}
        p := top;
    end;
{êîíåö òåëà ïðîöåäóðû}
{*ïðèìå÷àíèå: óêàçàòåëü íà âåðøèíó Ñòåêà top äîëæåí ññûëàòüñÿ íà NIL}
end;
{---------------------------------------------------------------------------}
{Ôóíêöèÿ: íàõîæäåíèå êîëè÷åñòâà ýëåìåíòîâ â Ñòåêå}
{---------------------------------------------------------------------------}
function getCountElem : integer;
var
{âñïîìîãàòåëüíûé óêàçàòåëü}
    p : Tptr;
{õðàíèò êîëè÷åñòâî ýëåìåíòîâ â Ñòåêå}
    k : integer;
{íà÷àëî òåëà ôóíêöèè}
begin
{çàíóëÿåì êîëè÷åñòâî, òàê êàê ðàñ÷åò åùå íå íà÷àëñÿ}
    k := 0;
{óêàçàòåëü p ñòàðòóåò ñ ñàìîãî âåðõíåãî ýëåìåíòà Ñòåêà}
    p := top;
{äî òåõ ïîð ïîêà ð íå âûéäåò çà ïîñëåäíèé ýëåìåíò, òî åñòü â NIL
 áóäåì âåñòè ïîäñ÷åò ýëåìåíòîâ}
    while(p <> NIL) do
    begin
{ñ÷åò÷èê, îòâå÷àþùèé çà êîëè÷åñòâî ýëåìåíòîâ óâåëè÷èâàåì íà åäèíèöó}
        k := k + 1;
{ïåðåõîäèì íà ñëåäóþùèé ýëåìåíò Ñòåêà}
        p := p^.link;
    end;
{â êà÷åñòâå îòâåòà âîçâðàùàåì êîëè÷åñòâî ýëåìåíòîâ â Ñòåêå}
    getCountElem := k;
end;
{---------------------------------------------------------------------------}
{Ôóíêöèÿ: ãëàâíîå ìåíþ ïðîãðàììû}
{---------------------------------------------------------------------------}
function menu : integer;
var
{õðàíèò çíà÷åíèå ïóíêòà ìåíþ âûáðàííîãî ïîëüçîâàòåëåì}
    sel : integer;
{íà÷àëî òåëà ôóíêöèè}
begin
{çàïóñêàåì âèçóàëèçàöèþ ïóíêòîâ ìåíþ â öèêëå, äî òåõ ïîð ïîêà, ïîëüçîâàòåëü
 íå âûáåðåò êàêîé-ëèáî çàäàííûé ïóíêò ìåíþ}
    repeat
        clrscr;
        writeln('1 - ADD ITEM TO STACK TOP');
        writeln('2 - REMOVE ITEM FROM STACK TOP');
        writeln('3 - PRINTING STACK ELEMENTS ON SCREEN FROM TOP TO DOWN');
        writeln('4 - PRINTING STACK ON SCREEN FROM BOTTOM TO TOP');
        writeln('5 - TOTAL NUMBER OF ELEMENTS IN A STACK');
        writeln('6 - REMOVING ALL ITEMS FROM THE STACK');
        writeln('7 - EXIT');
        writeln;
        write('Choose one of the suggested items: ');
{âîçìîæíà îøèáêà ââîäà, åñëè ïîëüçîâàòåëü ââåäåò, íàïðèìåð, íå ÷èñëî, à
 êàêîé-íèáóäü ñèìâîë èëè äàæå ñòðîêîâîå çíà÷åíèå. Îáðàáîòêè îøèáîê íåò!}
{ñ÷èòûâàåì ñ êëàâèàòóðû ïóíêò ìåíþ, âûáðàííûé ïîëüçîâàòåëåì}
        readln(sel);
{ñòîèò íåáîëüøàÿ çàùèòà íà äèàïàçîí îò 1 äî 7}
    until((sel >= 1) and (sel <= 7));
    writeln;
{â êà÷åñòâå îòâåòà âîçâðàùàåòñÿ ÷èñëî, óêàçàííîå ïîëüçîâàòåëåì}
    menu := sel;
{êîíåö òåëà ôóíêöèè}
end;
{---------------------------------------------------------------------------}
{Íà÷àëî îñíîâíîãî áëîêà ïðîãðàììû}
{---------------------------------------------------------------------------}
var
{õðàíèò âûáîð ïîëüçîâàòåëÿ îòíîñèòåëüíî ãëàâíîãî ìåíþ}
    sel : integer;
begin
{î÷èñòêà ýêðàíà îò ïðîøëûõ âûâîäîâ è óñòàíîâêà öâåòà òåêñòà áåëûì}
    clrscr;
    textColor(WHITE);
{èçíà÷àëüíî Ñòåê ïóòü, òî åñòü íå ñîäåðæèò ýëåìåíòîâ}
    top := NIL;
{ïîêà ïîëüçîâàòåëü íå âûáåðåò ïóíêò ìåíþ, îòâå÷àþùèé çà âûõîä èç ïðîãðàììû,
 áóäåò ïîÿâëÿòüñÿ èíòåðàêòèâíîå ìåíþ}
    repeat
{ïîëó÷àåì íîìåð îïåðàöèè îò ïîëüçîâàòåëÿ è çàòåì íà÷èíàåì àíàëèçèðîâàòü
 íîìåð è âûçûâàåì ñîîòâåòñòâóþùóþ ïîäïðîãðàììó}
        sel := menu;
        case sel of
            1:
            begin
{âñòàâêà ýëåìåíòà â âåðøèíó Ñòåêà}
                push;
{îïîâåùåíèå ïîëüçîâàòåëÿ îá óñïåøíîì çàâåðøåíèè îïåðàöèè}
                writeln;
                write('New item added successfully!');
                readln;
            end;
            2:
            begin
{åñëè â Ñòåêå íåò íè îäíîãî ýëåìåíòà, òî óäàëåíèå ôèçè÷åñêè íåâîçìîæíî}
                if(top = NIL) then
                    writeln('There are no items on the stack to remove!')
                else
                begin
{óäàëåíèå ýëåìåíòà èç âåðøèíû Ñòåêà}
                    pop;
{îïîâåùåíèå ïîëüçîâàòåëÿ îá óñïåøíîì çàâåðøåíèè îïåðàöèè}
                    writeln;
                    write('Removing an element from the top of the Stack has been successfully completed!');
                end;
                readln;
            end;
            3:
            begin
{åñëè â Ñòåêå íåò ýëåìåíòîâ, òî âûçûâàåì äèàëîã äëÿ ïîëüçîâàòåëÿ}
                if(top = NIL) then
                    write('Items cannot be printed because the Stack is empty!')
                else
{ïå÷àòü ýëåìåíòîâ Ñòåêà îò âåðøèíû âíèç}
                    printFromTop;
                readln;
            end;
            4:
            begin
{åñëè â Ñòåêå íåò ýëåìåíòîâ, òî âûçûâàåì äèàëîã äëÿ ïîëüçîâàòåëÿ}
                if(top = NIL) then
                    write('Items cannot be printed because the Stack is empty!')
                else
                begin
                    write('Stack elements look like: ');
{ðåêóðñèâíàÿ ïå÷àòü ýëåìåíòîâ Ñòåêà îò êîíöà ê âåðøèíå}
                    printRecFromEnd(top);
                end;
                readln;
            end;
            5:
            begin
{îïðåäåëÿåì êîëè÷åñòâî ýëåìåíòîâ â Ñòåêå}
                write('Number of Stack Elements: ', getCountElem);
                readln;
            end;
            6:
            begin
{óäàëåíèå âñåõ ýëåìåíòîâ èç Ñòåêà}
                delAllStack;
                write('All Stack elements have been successfully removed!');
                readln;
            end;
        end;
    until(sel = 7);
{ïåðåä òåì, êàê çàêðûòü ïðîãðàììó, îáÿçàòåëüíî íàäî âûçûâàòü ïðîöåäóðó,
 îòâå÷àþùóþ çà óäàëåíèå âñåõ ýëåìåíòîâ Ñòåêà, ÷òîáû íå áûëî óòå÷êè ïàìÿòè}
    delAllStack;
{êîíåö ãëàâíîãî áëîêà ïðîãðàììû}
end.