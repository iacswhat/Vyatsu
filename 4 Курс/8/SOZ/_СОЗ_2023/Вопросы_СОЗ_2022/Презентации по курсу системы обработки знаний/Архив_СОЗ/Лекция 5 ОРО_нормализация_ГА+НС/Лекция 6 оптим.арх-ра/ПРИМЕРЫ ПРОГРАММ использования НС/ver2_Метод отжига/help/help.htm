<html>
<head><title>Справка</title></head>
<body>
<h1 align="center">Справка</h1>
<h2 align="center">Алгоритм имитации отжига</h2>
<h3 align="center">Естественная мотивация</h3>
<p>Метод имитации отжига моделирует процесс восстановления - физический процесс, который заключается в нагреве и последующем контролируемом охлаждении субстанции. В результате получается прочная кристаллическая структура, которая отличается от структуры с дефектами, образующейся при быстром беспорядочном охлаждении.</p>
<p>Свойства структуры зависят от коэффициента охлаждения после того, как субстанция был нагрета до точки плавления. Если структура охлаждалась медленно, будут сформированы крупные кристаллы, что очень полезно для строения субстанции. Если субстанция охлаждается скачкообразно, образуется слабая структура.</p>
<p>Чтобы расплавить материал, требуется большое количество энергии. При понижении температуры уменьшается и количество энергии. Чтобы яснее представить процесс восстановления, рассмотрим следующий пример. "Взбалтывание" при высокой температуре сопровождается высокой молекулярной активностью в физической системе. Пусть мы взбалтываем емкость, в которой находится какая-то поверхность сложной формы. Внутри емкости также имеется шарик, который пытается найти точку равновесия. При высокой температуре шарик может свободно перемещаться по поверхности, а при низкой температуре "взбалтывание" становится менее интенсивным и передвижения шарика сокращаются. Задача заключается в том, чтобы найти точку минимального перемещения при сильном "взбалтывании". При снижении температуры уменьшается вероятность того, что шарик выйдет из точки равновесия. Именно в таком виде процесс поиска заимствуется из восстановления.</p>
<h3 align="center">Описание алгоритма</h3>
<p>Рассмотрим, как метафора охлаждения растаявшей субстанции используется для решения задач. Схема алгоритма приведена в приложении Б. Алгоритм отжига может быть разделен на 5 этапов:</p>
<ol TYPE="1" START="1">
<li>Начальное решение. Для большинства проблем начальное решение будет случайным. На самом первом шаге оно помещается в "текущее решение" (см. приложение Б). Другая возможность заключается в том, чтобы загрузить в качестве начального решения уже существующее, возможно, то самое, которое было найдено во время предыдущего поиска. Это предоставляет алгоритму базу, на основании которой выполняется поиск оптимального решения проблемы.</li>
<li>Оценка решения. Состоит из декодировки текущего решения и выполнения нужного действия, позволяющего понять его целесообразность для решения данной проблемы. Обратим внимание, что закодированное решение может просто состоять из набора переменных. Они будут декодированы из существующего решения, а затем эффективность решения будет оценена на основании того, насколько успешно удалось решить данную задачу.</li>
<li>Случайный поиск решения. Поиск начинается с копирования текущего решения в "рабочее решение". Затем мы произвольно модифицируем рабочее решение.</li>
<li>Критерий допуска. На этом этапе имеется 2 решения: оригинальное решение (текущее) и найденное рабочее решение. С каждым решением связана определенная энергия, представляющая собой его эффективность (НУО чем ниже энергия, тем выше эффективность)
Затем рабочее решение сравнивается с текущим. Если рабочее решение имеет меньшую энергию, чем текущее, то мы копируем рабочее решение в текущее.
Однако если рабочее решение хуже, чем текущее, мы определяем критерий допуска, чтобы выяснить, что следует сделать с рабочим решением. Вероятность допуска описывается уравнением:<br><br>
P(dE)=exp(-dE/T)<br><br>
При высокой температуре (свыше 60°С) плохие решения принимаются чаще, чем отбрасываются. Если энергия меньше, вероятность принятия решения выше. При снижении температуры вероятность принятия худшего решения также снижается.
При высоких температурах симулированное восстановление позволяет принимать худшие решения для того, чтобы произвести более полный поиск решений. При снижении температуры диапазон поиска также уменьшается, пока не достигается равенство при температуре 0°.</li>
<li>Снижение температуры. После ряда итераций при данной температуре мы ненамного снижаем ее. Как правило используется простая геометрическая функция:<br><br>
Ti+1=aTi<br><br>
Константа a меньше единицы. Возможны и другие стратегии снижения температуры, например, линейные и нелинейные функции.</li>
<li>Повтор. При одной температуре выполняется несколько итераций. После завершения итераций температура будет понижена. Процесс продолжается, пока температура не достигнет нуля.</li>
</ol>
<h3 align="center">Применение алгоритма для решения задачи о расстановке ферзей</h3>

<p>Представление решения стандартно: кодировкой является массив из N элементов. В элементах массива хранятся строчные индексы положения ферзя.</p>
<p>Создать произвольное решение очень просто. Сначала нужно инициализировать решение, позволив каждому ферзю занять строку, соответствующую столбцу. Затем необходимо пройти по каждому столбцу и выбрать произвольное число от 1 до N для каждого столбца. Затем два элемента перемещаются (текущий и произвольно выбранный столбцы). Когда алгоритм достигает конца, автоматически формируется решение.</p>
<p>Энергия решения определяется как количество конфликтов в данной кодировке. Задача заключается в том, чтобы найти кодировку, при которой энергия равна нулю.</p>
<p>Заметим, что при описанном выше формировании произвольного решения конфликты по горизонтали и вертикали исключаются.</p>
<p>Каждая итерация заключается в том, что случайным образом выбираются два элемента в кодировке, после чего они меняются местами.</p>
 
<h2 align="center">Описание программного продукта</h2>
<h3 align="center">Запуск программы, инициализация начальных данных</h3>
<p>Для запуска программы необходимо запустить исполняемый файл nqp.exe. После этого на экране появится окно инициализации параметров, необходимых для работы алгоритма</p>
<p align="center"><img src="Form1.jpg"></p> 
<p>В этом окне пользователь может указать значения четырех параметров. На параметры накладываются некоторые ограничения:</p>
<UL>
<li>Начальная температура. Обязательно должна быть больше нуля, но меньше 100°С. Большие значения (больше 60°С) указывать не рекомендуется.</li>
<li>Количество ферзей. В этом поле задается число N, определяющее также размер шахматной доски. Обязательно должно быть больше нуля. Максимально возможное значение - 40, однако следует учитывать, что при N>20 графическое построение шахматной доски длится несколько секунд.</li>
<li>Коэффициент понижения. Здесь задается в процентах. Применяется при уменьшении температуры в соответствии с зависимостью (2). Обязательно должен быть больше нуля. Кроме того, значение 100% также является недопустимым ввиду того, что уменьшение температуры вообще не сможет происходить.</li>
<li>Число итераций при неизменной температуре. Данный параметр не может равняться нулю.
Нажатие на кнопку "Решить задачу" после установки параметров откроет основное окно программы.</li>
</ul>
<p>Нажатие на кнопку "Выход" приведет к выходу из программы.</p>

<h3 align="center">Визуализация и пошаговый режим работы</h3>

<p>После установки всех необходимых параметров и нажатия на кнопку "Решить задачу" на экране появляется основное окно программы (рис. 2):</p>
<p align="center"><img src="Form2.jpg"></p> 
<p>Большую часть основного окна программы занимает графическое отображение доски размера NxN клеток (аналог шахматной доски, но без разделения на черные и белые клетки).</p>
<p>В нижней части окна находятся следующие элементы управления:
<ul>
<li>Кнопка "Решить" - запускает автоматический процесс поиска решения задачи исходя из указанного уровня визуализации.</li>
<li>Кнопка "Пошагово". Нажатие данной кнопки активирует пошаговый режим решения задачи. Нажатие на нее приведет к тому, что процесс поиска остановится сразу же после принятия нового текущего решения. Повторное нажатие на эту кнопку приведет к работе алгоритма до нахождения следующего текущего решения.</li>
<li>Кнопка "Сброс". Нажатие на эту кнопку останавливает текущий процесс решения задачи и обнуляет все данные, кроме входных параметров.</li>
Радиокнопка "Все этапы решения". Учитывается только при автоматическом поиске решения задачи. Если радиокнопка включена, то каждое изменение текущего решения будет отображено на "шахматной" доске, после чего процесс будет приостановлен на 500 мс, а затем снова возобновлен.</li>
<li>Радиокнопка "Только окончательное решение". Учитывается только при автоматическом поиске решения задачи. Если данная радиокнопка включена, то на экране будет отображено только окончательное решение, полученное по завершении работы алгоритма имитации отжига.</li>
<li>Кнопка "Изменить установки". Нажатие на нее вызовет окно изменения параметров инициализации алгоритма (рис. 1).</li>
<li>Кнопка "Выход". Нажатие на нее приведет к выходу из программы.</li>
</ul></p>
<p>Если был активирован автоматический поиск решения, то кнопка "Пошагово", а также радиокнопки, отвечающие за уровень визуализации, становятся недоступными до тех пор, пока процесс поиска не будет завершен или прерван.</p>
<p>Кроме текущего расположения ферзей в этом окне отображается также число оставшихся конфликтов. Для указания текущего этапа работы алгоритма предусмотрены две полосы состояния. Верхняя отображается только при автоматическом поиске решения с полной визуализацией, показывает прошедшее число итераций при текущей температуре. Нижняя полоса показывает прогресс уменьшения температуры, она отображается при любом режиме работы программы (см. рис. 3).</p>
 
<h3 align="center">Протокол работы программы</h3>

<p>По завершении работы алгоритма на экране появляется протокол работы программы:</p>
<p align="center"><img src="Form3.jpg"></p> 
<p>Протокол представляет собой таблицу со следующими столбцами:<br>
<ul>
<li>Шаг. Указывается шаг работы алгоритма. Кроме того, номера шагов совпадают с номерами строк в таблице протокола.<li>
<li>Температура. На каждом шаге в это поле помещается текущая температура среды, используемая при определении критерия допуска.</li>
<li>Итерация. В это поле записывается номер итерации при неизменной температуре.</li>
<li>Энергия текущего решения - число конфликтов в текущем решении задачи.</li>
<li>Переход к новому решению. В данный столбец записывается порядок получения нового рабочего решения, т.е. два элемента из кодировки, которые меняются местами.</li>
<li>Энергия нового решения - число конфликтов в полученном на данной итерации решении.</li>
<li>Вероятность приема нового решения. В данном столбце находится критерий допуска для нового решения.</li>
<li>Принято ли решение. Здесь указывается, прошло ли новое решение по критерию допуска, или нет.
Данное окно содержит единственную кнопку "Закрыть", нажатие которой приведет к возвращению в основное окно программы.</li>
</ul>
</p>
</body>
</html>