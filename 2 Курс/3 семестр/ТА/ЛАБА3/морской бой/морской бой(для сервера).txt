unit bot;

interface

type
    TMapRow = array of integer;
    TMap = array of TMapRow;
    
    
    
    TCoordinates = array of integer;
     TCoord= record
     i: integer;
     j: integer;
     end;
const
    // Коды результатов выстрела:
    SHOT_RESULT_EMPTY: integer = 0; // Промах
    SHOT_RESULT_DAMAGE: integer = 2; // Корабль соперника ранен (подбит)
    SHOT_RESULT_KILL: integer = 3; // Корабль соперника убит (подбиты все палубы)
var
    setnumber: integer;
    hodnumber: integer;
     ii,jj: integer;
    nom: integer=1;
    dophod: array [1..1000] of TCoord ;
    hemap: array[0..9,0..9] of byte;
     hodi: integer;
     hodj: integer; 
     flag,f: boolean;
     fll: boolean;
     //ipoint: integer;
     //jpoint: integer;
     //gg: integer;
     //res: integer;
     i,j,ori,orj: integer;
{
    Вызывается один раз перед началом игры.

    Передаёт параметры, с которыми запущен турнир:
    - setCount: максимальное количество сетов в игре
}

  
  
  
procedure setParameters(setCount: integer);

{
    Вызывается один раз в начале игры.
}
procedure onGameStart();

{
    Вызывается один раз в начале сета.
}
procedure onSetStart();

{
    Возвращает карту с расстановкой кораблей.
    Вызывается в начале каждого сета (каждый сет можно делать новую расстановку).

    Карта должна иметь размер 10х10 и быть заполнена следующим образом:
    - 0 - пустая клетка
    - 1 - клетка с палубой корабля

    На карте должно быть четыре 1-палубника, три 2-палубника, два 3-палубника и один 4-палубник.
    Корабли должны быть расположены строго вертикально или горизонтально (т.е., не иметь изгибов).
    Корабли не должны соприкасаться.
}
function getMap(): TMap;

{
    Возвращает координаты клетки, в которую на текущем ходу стреляет бот.

    Координаты задаются массивом из двух целых чисел.
    Первая соответствует строке (координата по вертикали), вторая - столбцу (координата по горизонтали).
    Отсчёт ведётся с левого верхнего угла.
    Т.е., чтобы выстрелить в клетку map[i][j], необходимо вернуть [i, j].

    Результат выстрела будет гарантированно передан следующим вызовом через shotResult.
}
function shoot(): TCoordinates;

{
    Вызывается сразу после shoot, чтобы передать результат выстрела.
    Возможные значения resultCode:
    - 0 - Промах
    - 2 - Корабль соперника ранен (подбит)
    - 3 - Корабль соперника убит (подбиты все палубы)
}
procedure shotResult(resultCode: integer);

{
    Вызывается после выстрела соперника.
    Параметр cell - координаты клетки, в которую выстрелил соперник.
}
procedure onOpponentShot(cell: TCoordinates);

{
    Вызывается один раз в конце сета.
}
procedure onSetEnd();

{
    Вызывается один раз в конце игры.
}
procedure onGameEnd();
procedure deletehod(i: integer;j:integer);
implementation


     
procedure setParameters(setCount: integer);
begin
end;

procedure onGameStart();
begin
end;

procedure onSetStart();
begin
//hodnumber:=1;
f:=false;
 flag:=false;
   {
    hemap[0,0]:=3;  hemap[0,1]:=8; hemap[0,2]:=3; hemap[0,3]:=7; hemap[0,4]:=3; hemap[0,5]:=5; hemap[0,6]:=3; hemap[0,7]:=7; hemap[0,8]:=3; hemap[0,9]:=8;
    hemap[1,0]:=5;  hemap[1,1]:=3; hemap[1,2]:=6; hemap[1,3]:=3; hemap[1,4]:=4; hemap[1,5]:=3; hemap[1,6]:=6; hemap[1,7]:=3; hemap[1,8]:=4; hemap[1,9]:=3;
    hemap[2,0]:=3;  hemap[2,1]:=6; hemap[2,2]:=3; hemap[2,3]:=4; hemap[2,4]:=3; hemap[2,5]:=6; hemap[2,6]:=3; hemap[2,7]:=4; hemap[2,8]:=3; hemap[2,9]:=7;
    hemap[3,0]:=7;  hemap[3,1]:=3; hemap[3,2]:=4; hemap[3,3]:=3; hemap[3,4]:=6; hemap[3,5]:=3; hemap[3,6]:=4; hemap[3,7]:=3; hemap[3,8]:=6; hemap[3,9]:=3;
    hemap[4,0]:=3;  hemap[4,1]:=4; hemap[4,2]:=3; hemap[4,3]:=6; hemap[4,4]:=3; hemap[4,5]:=4; hemap[4,6]:=3; hemap[4,7]:=6; hemap[4,8]:=3; hemap[4,9]:=5;
    hemap[5,0]:=8;  hemap[5,1]:=3; hemap[5,2]:=6; hemap[5,3]:=3; hemap[5,4]:=4; hemap[5,5]:=3; hemap[5,6]:=6; hemap[5,7]:=3; hemap[5,8]:=4; hemap[5,9]:=3;
    hemap[6,0]:=3;  hemap[6,1]:=6; hemap[6,2]:=3; hemap[6,3]:=4; hemap[6,4]:=3; hemap[6,5]:=6; hemap[6,6]:=3; hemap[6,7]:=4; hemap[6,8]:=3; hemap[6,9]:=7;
    hemap[7,0]:=7;  hemap[7,1]:=3; hemap[7,2]:=4; hemap[7,3]:=3; hemap[7,4]:=6; hemap[7,5]:=3; hemap[7,6]:=4; hemap[7,7]:=3; hemap[7,8]:=6; hemap[7,9]:=3;
    hemap[8,0]:=3;  hemap[8,1]:=4; hemap[8,2]:=3; hemap[8,3]:=6; hemap[8,4]:=3; hemap[8,5]:=4; hemap[8,6]:=3; hemap[8,7]:=6; hemap[8,8]:=3; hemap[8,9]:=5;
    hemap[9,0]:=4;  hemap[9,1]:=3; hemap[9,2]:=7; hemap[9,3]:=3; hemap[9,4]:=8; hemap[9,5]:=3; hemap[9,6]:=7; hemap[9,7]:=3; hemap[9,8]:=5; hemap[9,9]:=8;
    }

    
    hemap[0,0]:=3;  hemap[0,1]:=8; hemap[0,2]:=3; hemap[0,3]:=7; hemap[0,4]:=3; hemap[0,5]:=5; hemap[0,6]:=3; hemap[0,7]:=7; hemap[0,8]:=3; hemap[0,9]:=3;
    hemap[1,0]:=5;  hemap[1,1]:=3; hemap[1,2]:=6; hemap[1,3]:=3; hemap[1,4]:=4; hemap[1,5]:=3; hemap[1,6]:=6; hemap[1,7]:=3; hemap[1,8]:=4; hemap[1,9]:=3;
    hemap[2,0]:=3;  hemap[2,1]:=6; hemap[2,2]:=3; hemap[2,3]:=4; hemap[2,4]:=3; hemap[2,5]:=6; hemap[2,6]:=3; hemap[2,7]:=4; hemap[2,8]:=3; hemap[2,9]:=7;
    hemap[3,0]:=7;  hemap[3,1]:=3; hemap[3,2]:=4; hemap[3,3]:=3; hemap[3,4]:=6; hemap[3,5]:=3; hemap[3,6]:=4; hemap[3,7]:=3; hemap[3,8]:=6; hemap[3,9]:=3;
    hemap[4,0]:=3;  hemap[4,1]:=4; hemap[4,2]:=3; hemap[4,3]:=6; hemap[4,4]:=3; hemap[4,5]:=4; hemap[4,6]:=3; hemap[4,7]:=6; hemap[4,8]:=3; hemap[4,9]:=5;
    hemap[5,0]:=8;  hemap[5,1]:=3; hemap[5,2]:=6; hemap[5,3]:=3; hemap[5,4]:=4; hemap[5,5]:=3; hemap[5,6]:=6; hemap[5,7]:=3; hemap[5,8]:=4; hemap[5,9]:=3;
    hemap[6,0]:=3;  hemap[6,1]:=6; hemap[6,2]:=3; hemap[6,3]:=4; hemap[6,4]:=3; hemap[6,5]:=6; hemap[6,6]:=3; hemap[6,7]:=4; hemap[6,8]:=3; hemap[6,9]:=7;
    hemap[7,0]:=7;  hemap[7,1]:=3; hemap[7,2]:=4; hemap[7,3]:=3; hemap[7,4]:=6; hemap[7,5]:=3; hemap[7,6]:=4; hemap[7,7]:=3; hemap[7,8]:=6; hemap[7,9]:=3;
    hemap[8,0]:=3;  hemap[8,1]:=4; hemap[8,2]:=3; hemap[8,3]:=6; hemap[8,4]:=3; hemap[8,5]:=4; hemap[8,6]:=3; hemap[8,7]:=6; hemap[8,8]:=3; hemap[8,9]:=5;
    hemap[9,0]:=4;  hemap[9,1]:=3; hemap[9,2]:=7; hemap[9,3]:=3; hemap[9,4]:=8; hemap[9,5]:=3; hemap[9,6]:=7; hemap[9,7]:=3; hemap[9,8]:=5; hemap[9,9]:=3;
   




    setnumber:=setnumber+1;
    if setnumber=6 then
      setnumber:=1;
end;

function getMap(): TMap;
begin
  
  
  if setnumber=1 then begin
    result := TMap.Create(
        TMapRow.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
        TMapRow.Create(0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 1),
        TMapRow.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(1, 1, 0, 1, 1, 0, 1, 1, 0, 1),
        TMapRow.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 1),
        TMapRow.Create(1, 1, 1, 0, 1, 1, 1, 1, 0, 1)
    );
    end;

    if setnumber>1 then begin
    result := TMap.Create(
        TMapRow.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(1, 0, 0, 0, 0, 0, 0, 0, 0, 1),
        TMapRow.Create(1, 0, 0, 0, 0, 0, 0, 1, 0, 1),
        TMapRow.Create(0, 0, 0, 1, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(1, 0, 0, 0, 0, 0, 0, 0, 0, 1),
        TMapRow.Create(1, 0, 0, 0, 0, 0, 1, 0, 0, 1),
        TMapRow.Create(1, 0, 0, 1, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        TMapRow.Create(1, 1, 1, 0, 0, 0, 1, 1, 1, 0)
    );
    end;


end;

function shoot(): TCoordinates;
var i,j,maxi,maxj: integer;
begin
  if hodnumber=1 then
  begin
  hodi:=0;
  hodj:=0;
    end
    else
    begin
      maxi:=0;
      maxj:=0;
      fll:=false;
      for i:=0 to 9 do begin
          for j:=0 to 9 do begin
            
             if hemap[i,j]>hemap[maxi,maxj] then begin
              maxi:=i;
              maxj:=j;
              end;
     
     
          end;
          end;
          
          hodi:=maxi;
          hodj:=maxj;
          
          
    end;
   hodnumber:=hodnumber+1; 
result:=TCoordinates.Create(hodi,hodj);
end;

procedure shotResult(resultCode: integer);
var k: integer;
   i,j: integer;

begin

 if resultcode=0 then 
  begin  
   ii:=hodi;
   jj:=hodj;
   hemap[ii,jj]:=1;   
  end;

    if resultcode=2 then
    begin
     
    if f=true then
    nom:=nom+1;

    ii:=hodi;
    jj:=hodj;
    dophod[nom].i:=hodi;
    dophod[nom].j:=hodj;
    hemap[hodi,hodj]:=2;
    if nom=1 then begin
        ori:=hodi;
      orj:=hodj;
      
      jj:=jj-1;
      if (ii>=0)and(ii<=9)and(jj>=0)and(jj<=9)and(hemap[ii,jj]<>1) then
      hemap[ii,jj]:=9;
       jj:=jj+1;
       ii:=ii-1;
      if (ii>=0)and(ii<=9)and(jj>=0)and(jj<=9)and(hemap[ii,jj]<>1) then
      hemap[ii,jj]:=9;
           jj:=jj+1;
           ii:=ii+1;
      if (ii>=0)and(ii<=9)and(jj>=0)and(jj<=9)and(hemap[ii,jj]<>1) then
      hemap[ii,jj]:=9;
           jj:=jj-1;
           ii:=ii+1;
      if (ii>=0)and(ii<=9)and(jj>=0)and(jj<=9)and(hemap[ii,jj]<>1) then
      hemap[ii,jj]:=9;
      end;
      if nom>1 then begin
        
       {if (hodi>ori)then begin   //выстрелы вниз
        for j:=0 to 9 do 
          for i:=0 to 9 do begin
            if (hemap[i,j]=9) then
            hemap[i,j]:=1;
            if ((i=hodi+1)and(j=orj))and(hemap[i,j]<>1)then
              hemap[i,j]:=9;
            if (i=ori-1)and(j=hodj)and(hemap[i,j]<>1)then
               hemap[i,j]:=9;
          end; 
       end; 
       
       if (hodi<ori)then begin   //выстреллы вверх
        for i:=0 to 9 do 
          for j:=0 to 9 do begin
            if (hemap[i,j]=9)then 
            hemap[i,j]:=1;
            if ((i=ori+1)and(j=orj))and(hemap[i,j]<>1)then
              hemap[i,j]:=9;
            if(i=hodi-1)and(j=hodj)and(hemap[i,j]<>1)then
              hemap[i,j]:=9; 
          end; 
       end; }





       if (hodi>ori)then begin   //выстрелы вниз
        for j:=0 to 9 do 
          for i:=0 to 9 do begin
            if (i<>ori-1)and(j<>hodj)and(hemap[i,j]=9) then
            hemap[i,j]:=1;
            if ((i=hodi+1)and(j=orj))and(hemap[i,j]<>1)then
              hemap[i,j]:=9;
          end; 
       end; 
       
       if (hodi<ori)then begin   //выстреллы вверх
        for i:=0 to 9 do 
          for j:=0 to 9 do begin
            if ((i<>ori+1)and(j<>orj)and(hemap[i,j]=9))then 
            hemap[i,j]:=1;
            if(i=hodi-1)and(j=hodj)and(hemap[i,j]<>1)then
              hemap[i,j]:=9; 
          end; 
       end; 

               




       
        if (hodj<orj)then begin  //выстрелы влево
        for i:=0 to 9 do 
          for j:=0 to 9 do begin
            if ((i<>hodi)and(j<>orj+1)and(hemap[i,j]=9))then
            hemap[i,j]:=1;
            if ((i=hodi)and(j=hodj-1))and(hemap[i,j]<>1)then
               hemap[i,j]:=9;
          end; 
       end; 
       
       
       if (hodj>orj)then begin
        for i:=0 to 9 do 
          for j:=0 to 9 do begin
            if ((i<>hodi)and(j<>orj-1)and(hemap[i,j]=9))then
            hemap[i,j]:=1;
            if ((i=hodi)and(j=hodj+1))and(hemap[i,j]<>1)then
               hemap[i,j]:=9;
          end; 
       end; 
       
       
       
      end;
    f:=true;
   
    end;


    if resultcode=3 then
    begin
     ii:=hodi;
     jj:=hodj;
    hemap[ii,jj]:=2;   
    deletehod(ii,jj);
  
      if (f=true) then begin
    for k:=1 to nom do begin
     ii:=dophod[k].i;
     jj:=dophod[k].j;
     hemap[ii,jj]:=2;   
    deletehod(ii,jj);
  end;
  nom:=1;
    f:=false;
  end;

end;
end;
procedure deletehod(i: integer;j:integer);
begin                          //заполнение массива ходов(куда нельзя стрелять)
       i:=i-1; j:=j-1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1;
        j:=j+1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1; 
        j:=j+1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1; 
         i:=i+1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1; 
          i:=i+1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1; 
            j:=j-1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1; 
             j:=j-1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1; 
             i:=i-1;
       if (i>=0)and(i<=9)and(j>=0)and(j<=9)and(hemap[i,j]<>2) then
       hemap[i,j]:=1;    
end;   


procedure onOpponentShot(cell: TCoordinates);
begin
end;

procedure onSetEnd();
begin
end;

procedure onGameEnd();
begin
end;

end.